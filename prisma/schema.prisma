generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model company {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description  String?   @db.VarChar(255)
  address      String?   @db.VarChar(255)
  phone_number String?   @db.VarChar(255)
  website      String?   @db.VarChar(255)
  name         String    @db.VarChar(255)
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime  @default(now()) @db.Timestamp(6)
  user_id      String    @db.Uuid
  tenant_id    String    @db.VarChar(255)
  user         user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  invoice      invoice[]
}

model invoice {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  invoice_number String           @db.VarChar(255)
  date           DateTime         @db.Timestamp(6)
  total_amount   Int
  status         String           @db.VarChar(255)
  due_date       DateTime?        @db.Timestamp(6)
  company_id     String           @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  company        company          @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user           user             @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  invoice_item   invoice_item[]
  source_invoice source_invoice[]
}

model invoice_item {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String   @db.VarChar(255)
  quantity    Int
  price       Int
  total       Int
  invoice_id  String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  invoice     invoice  @relation(fields: [invoice_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model source {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String           @db.VarChar(255)
  type           String           @db.VarChar(255)
  url            String           @db.VarChar(255)
  user_id        String           @db.Uuid
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  user           user             @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  source_invoice source_invoice[]
}

model source_invoice {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  source_id  String   @db.Uuid
  invoice_id String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  invoice    invoice  @relation(fields: [invoice_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  source     source   @relation(fields: [source_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  company     company[]
  invoice     invoice[]
  source      source[]
}
